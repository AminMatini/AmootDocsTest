name: Notify Server on Markdown Change

on:
  push:
    paths:
      - '**/*.md'  # Only trigger this workflow on Markdown file changes

jobs:
  notify_server:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Notify Server of Markdown Changes
      run: |
        # Your server URL
        SERVER_URL="https://localhost:7256/api/Git/Index"
        
        # Get the repository URL and branch
        REPO_URL="https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/"
        
        # Debug information
        echo "Repository URL: $REPO_URL"
        echo "Server URL: $SERVER_URL"
        
        # Fetch all commits to ensure the diff command works
        echo "Fetching all commits..."
        git fetch --all
        
        # Get the list of modified Markdown files between HEAD and the base branch
        BASE_BRANCH="main"  # Change this to your base branch if necessary
        echo "Comparing with base branch: $BASE_BRANCH"
        MODIFIED_FILES=$(git diff --name-only origin/${BASE_BRANCH} HEAD | grep '.md')
        
        # Check if MODIFIED_FILES is empty
        if [ -z "$MODIFIED_FILES" ]; then
          echo "No Markdown files modified."
          exit 0
        fi
        
        # Debugging output for modified files
        echo "Modified files:"
        echo "$MODIFIED_FILES"
        
        # Read modified files and send URLs
        for FILE in $MODIFIED_FILES; do
          # Construct file URL
          FILE_URL="${REPO_URL}${FILE}"
          echo "Constructed file URL: $FILE_URL"
          
          # Send the URL to your server
          response=$(curl -X POST "$SERVER_URL" \
            -H "Content-Type: application/json" \
            -d "{\"fileUrl\": \"$FILE_URL\"}" \
            -w "%{http_code}" -o /dev/null -s)
          
          echo "Sent URL to server: $FILE_URL with response code: $response"
        done
